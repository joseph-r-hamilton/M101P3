import base64
code=b'CmltcG9ydCBweW1vbmdvCmltcG9ydCByYW5kb20KaW1wb3J0IHJlCmltcG9ydCBzdHJpbmcKaW1wb3J0IHN5cwppbXBvcnQgZ2V0b3B0CmltcG9ydCBwcHJpbnQKCiMgQ29weXJpZ2h0IDIwMTUKIyBNb25nb0RCLCBJbmMuCiMgQXV0aG9yOiBBbmRyZXcgRXJsaWNoc29uICAgYWplQDEwZ2VuLmNvbQojCiMgSWYgeW91IGFyZSBhIHN0dWRlbnQgYW5kIHJlYWRpbmcgdGhpcyBjb2RlLCB0dXJuIGJhY2sgbm93LCBiZWZvcmUKIyB0aGUgTW9uZ29EQiBnb2RzIHNtaXRlIHlvdS4KCmNvbm5lY3Rpb24gPSBOb25lCmRiID0gTm9uZQptb25nb3N0ciA9ICJtb25nb2RiOi8vbG9jYWxob3N0OjI3MDE3IgpkYl9uYW1lID0gImFkbWluIgpyc19uYW1lID0gIm0xMDEiCgojIHRoaXMgc2NyaXB0IHdpbGwgY2hlY2sgdGhhdCBhIHJlcGxpY2Egc2V0IHdpdGggdGhyZWUgbm9kZXMgaXMgcnVubmluZyBvbiBhIGhvc3QKCiMgY29tbWFuZCBsaW5lIGFyZyBwYXJzaW5nIHRvIG1ha2UgZm9sa3MgaGFwcHkgd2hvIHdhbnQgdG8gcnVuIGF0IG1vbmdvbGFicyBvciBtb25nb2hxCiMgdGhpcyBmdW5jdGlvbnMgdXNlcyBnbG9iYWwgdmFycyB0byBjb21tdW5pY2F0ZS4gZm9yZ2l2ZSBtZS4KZGVmIGFyZ19wYXJzaW5nKGFyZ3YpOgoKICAgIGdsb2JhbCB3ZWJob3N0CiAgICBnbG9iYWwgbW9uZ29zdHIKICAgIGdsb2JhbCBkYl9uYW1lCgogICAgdHJ5OgogICAgICAgIG9wdHMsIGFyZ3MgPSBnZXRvcHQuZ2V0b3B0KGFyZ3YsICItcDotbTotZDoiKQogICAgZXhjZXB0IGdldG9wdC5HZXRvcHRFcnJvcjoKICAgICAgICBwcmludCgidXNhZ2UgdmFsaWRhdGUucHkgLW0gbW9uZ29Db25uZWN0U3RyaW5nIikKICAgICAgICBwcmludCgiXHRtb25nb0Nvbm5lY3Rpb25TdHJpbmcgZGVmYXVsdCB0byB7MH0iLmZvcm1hdChtb25nb3N0cikpCiAgICAgICAgcHJpbnQoIlx0ZGF0YWJhc2VOYW1lIGRlZmF1bHRzIHRvIHswfSIuZm9ybWF0KGRiX25hbWUpKQogICAgICAgIHN5cy5leGl0KDIpCiAgICBmb3Igb3B0LCBhcmcgaW4gb3B0czoKICAgICAgICBpZiAob3B0ID09ICctaCcpOgogICAgICAgICAgICBwcmludCgidXNhZ2UgdmFsaWRhdGUucHkgLW0gbW9uZ29Db25uZWN0U3RyaW5nIC1kIGRhdGFiYXNlTmFtZSIpCiAgICAgICAgICAgIHN5cy5leGl0KDIpCiAgICAgICAgZWxpZiBvcHQgaW4gKCItbSIpOgogICAgICAgICAgICBtb25nb3N0ciA9IGFyZwogICAgICAgICAgICBwcmludCgiT3ZlcnJpZGluZyBNb25nb0RCIGNvbm5lY3Rpb24gc3RyaW5nIHRvIGJlICIsIG1vbmdvc3RyKQogICAgICAgIGVsaWYgb3B0IGluICgiLWQiKToKICAgICAgICAgICAgZGJfbmFtZSA9IGFyZwogICAgICAgICAgICBwcmludCgiT3ZlcnJpZGluZyBNb25nb0RCIGRhdGFiYXNlIHRvIGJlICIsIGRiX25hbWUpCgojIGdldHMgdGhlIHJlcGxpY2Egc2V0IHN0YXR1cwpkZWYgZ2V0X3JzX3N0YXR1cygpOgogICAgZGIgPSBjb25uZWN0aW9uLmFkbWluCiAgICBycyA9IGRiLmNvbW1hbmQoInJlcGxTZXRHZXRTdGF0dXMiKQogICAgcmV0dXJuIHJzCgojIGdldHMgdGhlIHJlcGxpY2Egc3RhdGUgY29uZmlnCmRlZiBnZXRfcnNfY29uZmlndXJhdGlvbigpOgogICAgZGIgPSBjb25uZWN0aW9uLmxvY2FsCiAgICBjb2xsID0gZGIuc3lzdGVtLnJlcGxzZXQKICAgIHJldHVybiBjb2xsLmZpbmRfb25lKCkKCmRlZiByZXBsX3NldF9ydW5uaW5nKG51bV9ub2Rlcyk6CgogICAgdHJ5OgogICAgICAgIHJzID0gZ2V0X3JzX3N0YXR1cygpCiAgICAgICAgY29uZiA9IGdldF9yc19jb25maWd1cmF0aW9uKCkKICAgICAgICBob3N0cyAgPSBjb25uZWN0aW9uLmhvc3RzCiAgICBleGNlcHQ6CiAgICAgICAgcHJpbnQoImNhbid0IHF1ZXJ5IE1vbmdvREIuLmlzIGl0IHJ1bm5pbmc/IikKICAgICAgICByYWlzZQogICAgICAgIHJldHVybiBGYWxzZQoKICAgIGlmIChyc1snb2snXSAhPSAxKToKICAgICAgICBwcmludCgiU29ycnksIG9rIGlzIG5vdCAxIGZvciBycy5zdGF0dXMoKSIpCiAgICAgICAgcHJpbnQoIkhlcmUgaXMgd2hhdCBJIGdldDoiKQogICAgICAgIHBwID0gcHByaW50LlByZXR0eVByaW50ZXIoZGVwdGg9NikKICAgICAgICBwcC5wcHJpbnQocnMpCiAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgaWYgKGxlbihyc1snbWVtYmVycyddKSAhPSBudW1fbm9kZXMpOgogICAgICAgIHByaW50KCJTb3JyeSwgdGhlcmUgbmVlZCB0byBiZSB0aHJlZSBtZW1iZXJzIG9mIHRoZSByZXBsaWNhIHNldC4iKQogICAgICAgIHByaW50KCJoZXJlIGlzIHRoZSBtZW1iZXJzIGFycmF5IEkgc2VlIikKCiAgICAgICAgcHAgPSBwcHJpbnQuUHJldHR5UHJpbnRlcihkZXB0aD02KQogICAgICAgIHBwLnBwcmludChyc1snbWVtYmVycyddKQogICAgICAgIHJldHVybiBGYWxzZQogICAgCiAgICBwcmludCgiTG9va3MgZ29vZC4gUmVwbGljYSBzZXQgd2l0aCB0aHJlZSBub2RlcyBydW5uaW5nIikKICAgIHJldHVybiBUcnVlCgpkZWYgZ3JhY2VmdWxfZXhpdChpKToKICAgIGNvbm5lY3Rpb24uY2xvc2UoKQogICAgc3lzLmV4aXQoaSkKCiMgbWFpbiBzZWN0aW9uIG9mIHRoZSBjb2RlCmRlZiBtYWluKGFyZ3YpOgogICAgICAgICAgICAKICAgIGFyZ19wYXJzaW5nKGFyZ3YpCiAgICBnbG9iYWwgY29ubmVjdGlvbgogICAgZ2xvYmFsIGRiCgogICAgcHJpbnQoIldlbGNvbWUgdG8gdGhlIEhXIDYueCByZXBsaWNhIENoZWNrZXIuIE15IGpvYiBpcyB0byBtYWtlIHN1cmUgeW91IHN0YXJ0ZWQgYSByZXBsaWNhIHNldCB3aXRoIHRocmVlIG5vZGVzIikKCiAgICAjIGNvbm5lY3QgdG8gdGhlIGRiIChtb25nb3N0ciB3YXMgc2V0IGluIGFyZ19wYXJzaW5nKQogICAgdHJ5OgogICAgICAgIGNvbm5lY3Rpb24gPSBweW1vbmdvLk1vbmdvQ2xpZW50KG1vbmdvc3RyLCByZXBsaWNhU2V0PXJzX25hbWUpCiAgICAgICAgZGIgPSBjb25uZWN0aW9uW2RiX25hbWVdCiAgICBleGNlcHQ6CiAgICAgICAgcHJpbnQoImNhbid0IGNvbm5lY3QgdG8gTW9uZ29EQiByZXBsaWNhIixyc19uYW1lLCIgc2V0IHVzaW5nIiwgbW9uZ29zdHIsICIuIElzIGl0IHJ1bm5pbmc/IikKICAgICAgICBleGl0KDIpICAgICAjIG5vIGdyYWNlZnVsIGV4aXQgaWYgaXQgaXMgbm90IGNvbm5lY3RlZAogICAgICAgIAogICAgaWYgKG5vdCByZXBsX3NldF9ydW5uaW5nKDMpKToKICAgICAgICBwcmludCgiU29ycnksIHRoZSByZXBsaWNhIHNldCBkb2VzIG5vdCBzZWVtIHRvIGJlIHJ1bm5pbmciKQogICAgICAgIGdyYWNlZnVsX2V4aXQoMSkKICAgIAogICAgIyBpZiB5b3UgYXJlIHJlYWRpbmcgdGhpcyBpbiBjbGVhcnRleHQsIHlvdSBhcmUgdmlvbGF0aW5nIHRoZSBob25vciBjb2RlLgogICAgIyBZb3UgY2FuIHN0aWxsIHJlZGVlbSB5b3Vyc2VsZi4gR2V0IGl0IHdvcmtpbmcgYW5kIGRvbid0IHN1Ym1pdCB0aGUgdmFsaWRhdGlvbiBjb2RlIHVudGlsIHlvdSBkby4KICAgICMgQWxsIGEgbWFuIGhhcyBhdCB0aGUgZW5kIG9mIHRoZSBkYXkgaXMgaGlzIHdvcmQuCiAgICBwcmludCgiVGVzdHMgUGFzc2VkIGZvciBIVyA2LjUuIFlvdXIgSFcgNi41IHZhbGlkYXRpb24gY29kZSBpcyBranZqa2wzMjkwbWYwbTIwZjJramp2IikKICAgIGdyYWNlZnVsX2V4aXQoMCkKCmlmIF9fbmFtZV9fID09ICJfX21haW5fXyI6CiAgICBtYWluKHN5cy5hcmd2WzE6XSkKCgoKCgoKCgoK'
eval(compile(base64.b64decode(code), "<string>", 'exec'))
